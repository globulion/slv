#!/usr/bin/env python
"""
Computes the SolEFP parameters for BSM solvent molecule

Usage:

  slv_make-frg [fchk] [camm] [Gamess log] [Gamess efp] [output file] [nae]

Notes: 1. If Gamess log = none then Fock matrix will be parsed from g09 FCHK file
"""
from sys import argv, exit
from solvshift.slvpar import *
from solvshift.solefp import *
from libbbg.utilities import Read_xyz_file, ParseLmocFromGamessEfpFile as Parse_lmoc_efpgms, \
                      ParseDistributedPolarizabilitiesFromGamessEfpFile as Parse_dpol_efpgms,\
                      ParseDistributedPolarizabilitiesWrtImFreqFromGamessEfpFile as Parse_dpoli_efpgms
from libbbg.dma import DMA
print __doc__
if len(argv)==1: exit()

fchk = argv[1]
camm = argv[2]
glog = argv[3]
gefp = argv[4]
outfile = argv[5]
nae = int(argv[6])

# parse basic data, multipoles and WFN
sefp = FragFactory(fchk=fchk,gmslog=glog if glog.lower()!='none' else None,basis='6-311++G**',nae=nae)
sefp.eval(ct=False, cvgloc=1.0E-14)
par = sefp.get()

# parse rpol and dpol from EFP
rpol, dpol = Parse_dpol_efpgms(gefp)

# parsr dpoli
dpoli = Parse_dpoli_efpgms(gefp)

# parse DMA file
dma = DMA(camm)

# PyQuante.Molecule object
mol = Read_xyz_file(fchk,mol=1)
q = None

# create fragment and write to the output file
out = Frag()
out.set(frag=sefp,
        mol=mol,
        dma=dma,
        rpol=rpol,
        dpol=dpol,
        dpoli=dpoli)
#        chlpg=q)
out.write(outfile)
